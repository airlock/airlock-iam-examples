## Airlock IAM Application Parameters
##
## This template contains all the default values. To change a parameter, delete the leading # to enable a line.
##
## All file paths, such as "iam.workdir" and "iam.log.main.dir", are absolute paths or paths relative to the configuration root directory.
##
## The following variables are available and will be replaced with the values indicated below:
## ${instance.name} -> name of the instance (e.g. when used in instances/auth/instance.properties, auth)
## ${profile.name} -> name of the profile (e.g. when used in instances/auth/profiles/my-profile.properties, my-profile)
## ${iam.workdir} -> path to the working directory configured in the iam.workdir parameter.
## ${log4j.base} -> path to the built-in logging configuration file with the built-in set of logging configurations that serves as a base for this instance's logging configuration.
##
## It is possible to override these values by:
## - Creating a profile configuration file called "myprofile.properties" in the "profiles" directory and running with the "-p myprofile" option.
## - Setting environment variables by using the parameter name in all caps, with punctuation such as "-" and "." replaced with "_". E.g. IAM_MODULES=adminapp
##   The environment overrides both instance.properties and profile parameters.
##
## See "Application Parameters" in the documentation for more information on how to use parameters.


## JAVA_OPTS (arguments passed to the "java" executable) to use for running Airlock IAM. These will be added to the default set of options.
## As with any parameter, the environment variable "IAM_JAVA_OPTS" can be used, which will override this value.
#iam.java.opts = -XX\:MaxRAMPercentage\=50
iam.java.opts = -Xmx1536M

## Modules to enable. Comma separated list.
## Possible values: adminapp, loginapp, transaction-approval, api-policy-service, service-container, h2
#iam.modules = adminapp, loginapp, transaction-approval, api-policy-service, service-container
iam.modules = adminapp, loginapp

## The configuration environment identifier of this instance. (e.g. Production)
## By default the configuration environments feature is disabled. Defining this property enables the configuration environment feature.
#iam.environment.id = 

## Directory to store activated configurations and activation states (displayed in the config editor)
## Set to empty to not store the activated configurations nor the activation states.
## Otherwise it must be a writable directory (relative to the instance directory or as absolute path)
#iam.activated-configs.dir = .activated-configs

## Directory for working files.
## Should only be readable/writable by the user running Airlock IAM.
## Relative to configuration root directory or as absolute path.
#iam.workdir = work

## PID (process ID) file.
## Example: /run/iam.pid
#iam.pid-file = ${iam.workdir}/${instance.name}/${profile.name}/iam.pid

## External secrets configuration.
## One of:
## - "provider:" followed by a path to a configuration file specifying a "sensitive-values-provider" (and by default the path to a JCEKS keystore).
##   The "iam sensitive-values" CLI command and the Config Editor can be used to manage secrets in the keystore.
## - "secrets:" followed by a path to a plain-text secrets file in properties format.
##   For production, secrets should be encrypted and stored in an external system and mounted at deployment time (i.e. Kubernetes Secrets or encrypted filesystems).
##   Any text editor and the Config Editor can be used to manage the secrets.
## Examples: secrets:iam-secrets.properties, secrets:/run/secrets/iam-secrets.properties, provider:sensitive-values.properties
#iam.sensitive-values.config = provider\:instances/${instance.name}/sensitive-values.properties


### WEB SERVER

## Webserver connectors. Comma separated list.
## Possible values: http, https
#iam.web-server.connectors = https
iam.web-server.connectors = https,http

## The maximum number of request threads the webserver will use.
## A higher value may be necessary for very high load scenarios.
#iam.web-server.threads.max = 200

## Maximum size of HTTP headers in bytes.
#iam.web-server.header.bytes.max = 16384

## When enabled, compression will be used.
#iam.web-server.compression.enabled = false


### WEB SERVER HTTP

## Webserver bind IP address for the HTTP connector. By default the server will listen on all interfaces.
#iam.web-server.http.address = 0.0.0.0

## Webserver port for the HTTP connector. Must not be in use by any application.
#iam.web-server.http.port = 8080
iam.web-server.http.port = 8700


### WEB SERVER HTTPS

## Webserver bind IP address for the HTTPS connector. By default the server will listen on all interfaces.
#iam.web-server.https.address = 0.0.0.0

## Webserver port for the HTTPS connector. Must not be in use by any application.
#iam.web-server.https.port = 8443
iam.web-server.https.port = 8800

## Protocols to support when communicating with clients. Comma separated list.
## Supported protocols: SSLv2Hello, SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3
## NOTE: SSLv2Hello and SSLv3 are inherently unsafe.
#iam.web-server.https.tls-protocols = TLSv1.2, TLSv1.3

## The ciphers to enable using the OpenSSL syntax. Only the ciphers that are supported (by the bundled java version) will be used.
## The server's cipher order configured by this property is always preferred over the client's cipher order.
## Security Warning: Please note that old and insecure cipher suites should not be enabled for security reasons.
## See Apache Tomcat reference at https://tomcat.apache.org/tomcat-10.1-doc/config/http.html#SSL_Support_-_SSLHostConfig for details.
#iam.web-server.https.ciphers = TLS_AES_256_GCM_SHA384\:TLS_AES_128_GCM_SHA256\:ECDHE-ECDSA-AES256-GCM-SHA384\:ECDHE-RSA-AES256-GCM-SHA384\:ECDHE-ECDSA-CHACHA20-POLY1305\:ECDHE-RSA-CHACHA20-POLY1305\:ECDHE-ECDSA-AES128-GCM-SHA256\:ECDHE-RSA-AES128-GCM-SHA256\:DHE-RSA-AES256-GCM-SHA384\:DHE-RSA-CHACHA20-POLY1305\:DHE-RSA-AES128-GCM-SHA256\:ECDHE-ECDSA-AES256-SHA384\:ECDHE-RSA-AES256-SHA384\:ECDHE-ECDSA-AES128-SHA256\:ECDHE-RSA-AES128-SHA256\:DHE-RSA-AES256-SHA256\:DHE-RSA-AES128-SHA256\:ECDHE-ECDSA-AES256-SHA\:ECDHE-RSA-AES256-SHA\:ECDHE-ECDSA-AES128-SHA\:ECDHE-RSA-AES128-SHA\:DHE-RSA-AES256-SHA\:DHE-RSA-AES128-SHA

## Keystore file containing the server TLS/SSL certificate. Java Key Store or PKCS #12.
## The certificate in the keystore file must contain a key that can be used with at least one of the cipher suites
## defined in iam.web-server.https.ciphers. Otherwise, all TLS handshakes will fail.
## Possible types: JKS, PKCS12
#iam.web-server.https.keystore.type = PKCS12
#iam.web-server.https.keystore.file = instances/${instance.name}/server.p12
#iam.web-server.https.keystore.password = password

## Trust store containing certificates that this server trusts. Java Key Store or PKCS #12.
## Possible types: JKS, PKCS12
#iam.web-server.https.truststore.type = PKCS12
#iam.web-server.https.truststore.file = 
#iam.web-server.https.truststore.password = 

## Set to REQUIRED if you require a valid certificate chain from the client before accepting a connection.
## Set to OPTIONAL if you request a client certificate, but not fail if one isn't presented.
## Set to OPTIONAL_NO_CA if you want client certificates to be optional and you don't want Tomcat to check them against the list of trusted CAs.
## A NONE value (which is the default) will not require a certificate chain.
## See Apache Tomcat reference at https://tomcat.apache.org/tomcat-10.1-doc/config/http.html#SSL_Support_-_SSLHostConfig
## Possible values: REQUIRED, OPTIONAL, OPTIONAL_NO_CA, NONE
#iam.web-server.https.client-auth = NONE


### WEB SERVER URL PATHS
## Path to modules (e.g. http://localhost:8080/auth-admin)

#iam.adminapp.url.path = /${instance.name}-admin
#iam.loginapp.url.path = /${instance.name}-login
#iam.transaction-approval.url.path = /${instance.name}-transaction-approval
#iam.api-policy-service.url.path = /${instance.name}-api-policy-service
#iam.service-container.url.path = /${instance.name}-servicecontainer
#iam.h2.url.path = /${instance.name}-h2


### LOGGING
## - "iam.log.structured-file" parameters apply to the structured logs written to files in "JSON Lines" format. Appender: STRUCTURED-FILE
## - "iam.log.structured-stdout" parameters apply to the structured logs written to stdout in "JSON Lines" format. Appender: STRUCTURED-STDOUT
## - "iam.log.main" parameters apply to logs written in text format. Appenders: MAIN, CONSOLE

## Log4j 2 log level used for web modules. Applied globally to all appenders.
## Possible values: TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
#iam.log.level = INFO
iam.log.level = DEBUG

## This can be used to label/tag/mark all structured log records from this instance/profile/process/container.
## If set, the label will be included in the records of the structured Log4j2 logs.
#iam.log.label = 

## Enable logging of structured log messages to standard output.
## NOTE: This only affects the Log4j2 logs of the IAM modules, not the webserver or access logs.
#iam.log.structured-stdout.enabled = false

## Enable logging of structured log messages to files in "JSON Lines" format.
## NOTE: If an Elasticsearch URL is set, this will be forced to "true" and the files will be used as a local buffer.
## NOTE: This only affects the Log4j2 logs of the IAM modules, not the webserver or access logs.
#iam.log.structured-file.enabled = false
iam.log.structured-file.enabled = false

## Structured log files directory.
#iam.log.structured-file.dir = instances/${instance.name}/logs

## Maximum number of daily rotated "structured" log files to keep.
## Possible values: positive integers (>= 1)
#iam.log.structured-file.rotate.max-days = 90

## Send structured logs to Elasticsearch.
## NOTE: If an Elasticsearch URL is set, "iam.log.structured-file.enabled" will be forced to "true"; the files will be used as a local buffer.
## Example: http://elasticsearch.example.com:9200/
#iam.log.elasticsearch.url = 

## Enable logging to files in traditional unstructured format.
iam.log.main.enabled = true

## Unstructured log files output directory.
#iam.log.main.dir = instances/${instance.name}/logs

## Maximum number of daily rotated "main" log files to keep.
## Possible values: non-negative integers (>= 0)
#iam.log.main.rotate.max-days = 90

## Log4j 2 pattern used by the "MAIN" and "CONSOLE" appenders.
## See the log configuration documentation for all possible values.
## NOTE: in properties files, ":" must be escaped as "\:".
#iam.log.main.pattern = %d{DEFAULT} %-5p [IAM - ${sys\:iam.instance.name} - ${applicationName} - SID\: %18e{mdc\:GSID\:0} - RID\: %18e{mdc\:REQUEST_ID\:0}] | %e{header\:3}%c{1}\: %m%n

## Toggles the log file output for the webserver and access log. Uses the simple, pattern-based format.
#iam.web-server.log.file.enabled = true
#iam.web-server.access-log.file.enabled = false
iam.web-server.access-log.file.enabled = true

## Toggles whether the webserver and access log should be sent to standard output.
#iam.web-server.log.console.enabled = true
#iam.web-server.access-log.console.enabled = false

## Which format to use for both the Webserver and Access Log console output.
## The simple format uses a string pattern, while the structured format uses a predefined set of JSON properties.
## Possible values: simple, structured
#iam.web-server.log.console.format = simple

## Web Server Log Level Thresholds
## Possible values: TRACE, DEBUG, INFO, WARN, ERROR
#iam.web-server.log.file.level = INFO
#iam.web-server.log.console.level = INFO
iam.web-server.log.file.level = DEBUG

## Output directory for Webserver and Access Log Files
#iam.web-server.log.dir = instances/${instance.name}/logs
#iam.web-server.access-log.dir = instances/${instance.name}/logs

## Filename prefix and suffix for Webserver and Access Logs
## Note that the rotation timestamp is placed inbetween the prefix and suffix in the filename.
#iam.web-server.log.file.prefix = web-server.log
#iam.web-server.log.file.suffix = 
#iam.web-server.access-log.file.prefix = access.log
#iam.web-server.access-log.file.suffix = 

## Webserver and Access Log Files are configured to rotate daily
## These parameters define the maximum number of past days to keep rotated log files for.
## Possible values: non-negative integers (>= 0) (where 0 means "no deletion")
#iam.web-server.log.rotate.max-days = 90
#iam.web-server.access-log.rotate.max-days = 90

## Pattern for the web server log when using the simple format
## See SimpleFormatter reference at: https://docs.oracle.com/en/java/javase/11/docs/api/java.logging/java/util/logging/SimpleFormatter.html
#iam.web-server.log.format.simple.pattern = %1$tF %1$tT,%1$tL %4$-7s - %2$s - %5$s%6$s%n

## Pattern for the web server access log when using the simple format
## See Access Log Valve reference at: https://tomcat.apache.org/tomcat-10.1-doc/config/valve.html#Access_Log_Valve
#iam.web-server.access-log.format.simple.pattern = common

## Audit log Signing
## When enabled, audit log messages will be signed.
## NOTE: *unsigned* audit log messages are still written, even when signing is disabled.
#iam.audit-log.signing.enabled = false
## Configuration of signature algorithm and private key.
#iam.audit-log.signing.config = instances/${instance.name}/audit-logger/medusa-audit-logger.properties

## Advanced logging configuration
## Log4j configuration files listed first take precedence over configuration files listed later.
#iam.adminapp.log4j.configs = instances/${instance.name}/log4j/adminapp.xml, instances/${instance.name}/log4j/all-modules.xml, ${log4j.base}
#iam.loginapp.log4j.configs = instances/${instance.name}/log4j/loginapp.xml, instances/${instance.name}/log4j/all-modules.xml, ${log4j.base}
#iam.transaction-approval.log4j.configs = instances/${instance.name}/log4j/transaction-approval.xml, instances/${instance.name}/log4j/all-modules.xml, ${log4j.base}
#iam.api-policy-service.log4j.configs = instances/${instance.name}/log4j/api-policy-service.xml, instances/${instance.name}/log4j/all-modules.xml, ${log4j.base}
#iam.service-container.log4j.configs = instances/${instance.name}/log4j/service-container.xml, instances/${instance.name}/log4j/all-modules.xml, ${log4j.base}


### CONFIG EDITOR

## Whether the Config Editor will be started together with the adminapp
#iam.config-editor.enabled = true

## Config activation timeout in seconds
#iam.config-editor.activation.timeout = 20

## Default state of the config validation toggle
#iam.config-editor.validation.default = true

## Default state of the plugin tracking preference in the plugin tree
#iam.config-editor.plugin-tracking.default = false

## Whether configuration variables are displayed and editable in the Config Editor.
iam.config-editor.show-variables = true


### UI CUSTOMIZATION

## Directories containing custom Loginapp files. Comma separated list.
## Directories are specified in descending priority. That is directories listed first
## have precedence over those listed afterwards.
## If any of the directories do not exist at application startup, they are ignored (even if later created at runtime).
#iam.loginapp.layout.dirs = instances/${instance.name}/loginapp-layout/, instances/common/loginapp-layout/

## Path to ZIP file containing customizations made with the Loginapp Design Kit.
## If located inside the instance use ${instance.name}.
## Example:
## iam.loginapp.rest.ui.customizations = instances/${instance.name}/airlock-iam-loginapp-rest-ui-customizations.zip
iam.loginapp.rest.ui.customizations = instances/${instance.name}/design/only-texts.zip

## Directory containing the individual UI resource sets created with the Loginapp Design Kit.
## Note that the resource sets inside this directory must have unique file names in order to work properly.
## If iam.loginapp.rest.ui.customizations is also defined, iam.loginapp.ui.resource-sets.dir is evaluated first
## and iam.loginapp.rest.ui.customizations is only used if no match is found.
## Example:
## iam.loginapp.ui.resource-sets.dir = instances/${instance.name}/resource-sets/
#iam.loginapp.ui.resource-sets.dir = 

## Other module paths for UI customizations
#iam.adminapp.layout.dirs = instances/${instance.name}/adminapp-layout/, instances/common/adminapp-layout/
#iam.service-container.layout.dirs = instances/${instance.name}/service-container-layout/, instances/common/service-container-layout/

### LOGINAPP LEGACY COOKIES

## When enabled, Tomcat will allow "=" characters when parsing unquoted cookie values.
## When disabled (the default), cookie values containing "=" will be terminated when the "="
## is encountered and the remainder of the cookie value will be dropped.
#iam.loginapp.cookies.allowEqualsInValue.enabled = false

## When enabled, Tomcat will allow HTTP separators in cookie names and values.
## When disabled (the default), Tomcat will be cookie specification compliant.
#iam.loginapp.cookies.allowHttpSepsInV0.enabled = false


### H2 DATABASE
## The embedded H2 database is for testing purposes only.
## For production please refer to the documentation for more information.

## When h2 is enabled in iam.modules, an embedded H2 database will be started with Airlock IAM
#iam.h2.data.dir = instances/${instance.name}/h2
#iam.h2.jdbc.url = jdbc\:h2\:tcp\://localhost\:9001/iamdb
#iam.h2.jdbc.user = airlock
#iam.h2.jdbc.password = password


### HEALTH CHECK

## Allowed IP addresses on the health check endpoint. By default only localhost is allowed access.
## A regular expression that the remote client's IP address must match. Please note that due to the properties file
## format backslashes "\" must be doubled.
## Examples: ".*", "10.\\d+.\\d+.\\d+", "172.16.\\d+.\\d+"
#iam.health.address = 127\.\d+\.\d+\.\d+|\:\:1|0\:0\:0\:0\:0\:0\:0\:1

## Deploy health check endpoints on a separate web server port.
## By default health check endpoints are deployed on the main web server port.
## See "iam.web-server.http.port" and "iam.web-server.https.port".
## Example: 8081
#iam.health.port = 


### METRICS

## If a port is set, a metrics endpoint will be exposed on that port.
## Example: 9400
#iam.metrics.port = 

### PLUGINS, DRIVERS, EXTENSIONS

## Classpath entries are specified in descending priority. That is JAR files and directories listed first
## have precedence over those listed afterwards.
## Entries may either end with "/*" to include all .jar files in the given directory or may point to a
## specific .jar file.
#iam.adminapp.classpath.ext = instances/${instance.name}/libs/*, instances/common/libs/*
#iam.loginapp.classpath.ext = instances/${instance.name}/libs/*, instances/common/libs/*
#iam.transaction-approval.classpath.ext = instances/${instance.name}/libs/*, instances/common/libs/*
#iam.api-policy-service.classpath.ext = instances/${instance.name}/libs/*, instances/common/libs/*
#iam.service-container.classpath.ext = instances/${instance.name}/libs/*, instances/common/libs/*

## Strict mode highlights potential problems in IAM.
## This may include turning certain warnings into errors or disabling deprecated mechanisms.
## Possible values: DEFAULT, STRICT
#iam.mode = default
